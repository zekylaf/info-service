"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deepExtend = void 0;
var _ = __importStar(require("lodash"));
function getActualType(val) {
    if (_.isArray(val)) {
        return 'array';
    }
    if (_.isDate(val)) {
        return 'date';
    }
    if (_.isRegExp(val)) {
        return 'regex';
    }
    return typeof val;
}
var behavior = {
    '*': function (obj, sourcePropKey, sourcePropVal) {
        obj[sourcePropKey] = sourcePropVal;
    },
    object: function (obj, sourcePropKey, sourcePropVal) {
        obj[sourcePropKey] = deepExtend(obj[sourcePropKey] || {}, sourcePropVal);
    },
    array: function (obj, sourcePropKey, sourcePropVal) {
        obj[sourcePropKey] = [];
        _.each(sourcePropVal, function (item, idx) {
            behavior[getHandlerName(item)](obj[sourcePropKey], idx, item);
        });
    }
};
function getHandlerName(val) {
    var propType = getActualType(val);
    return behavior[propType] ? propType : '*';
}
function deepExtend(obj) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    _.each(Array.prototype.slice.call(arguments, 2), function (source) {
        _.each(source, function (sourcePropVal, sourcePropKey) {
            behavior[getHandlerName(sourcePropVal)](obj, sourcePropKey, sourcePropVal);
        });
    });
    return obj;
}
exports.deepExtend = deepExtend;
//# sourceMappingURL=utils.js.map